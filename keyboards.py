import base64
import sys
import uuid
from sys import prefix

from aiogram.types import InlineKeyboardButton, KeyboardButton, ReplyKeyboardMarkup
from aiogram.utils.keyboard import InlineKeyboardBuilder, ReplyKeyboardBuilder
from aiogram.filters.callback_data import CallbackData


from lexicon import lexicon


# from service import bs64


# –ö–ª–∞—Å—Å –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è callback_data
class CallFactory(CallbackData, prefix='user', sep='-'):
    user_id: int
    mg: int


class CallbackFactory(CallbackData, prefix='doc', sep='-'):
    user_id: int
    mg: int


class IsIdPrepayment(CallbackData, prefix='id', sep=':'):
    payment_id: str

class Pay(CallbackData, prefix='pay', sep=':'):
    pay_id: str
    second_pay: str
    status: bool
    id_link: str

def bs_64(payment):
    uuid_obj = uuid.UUID(payment)
    # –ö–æ–¥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ Base64
    compressed_uuid = base64.urlsafe_b64encode(uuid_obj.bytes).rstrip(b'=').decode('utf-8')
    return compressed_uuid


def de_bs64(compressed_uuid):
    # –î–µ–∫–æ–¥–∏—Ä—É–µ–º –∏–∑ Base64
    uuid_bytes = base64.urlsafe_b64decode(compressed_uuid)
    # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –±–∞–π—Ç—ã –æ–±—Ä–∞—Ç–Ω–æ –≤ –æ–±—ä–µ–∫—Ç UUID
    decoded_uuid = uuid.UUID(bytes=uuid_bytes)
    return decoded_uuid


def keyboard_start():
    kb = ReplyKeyboardBuilder().row(*[KeyboardButton(text="–†–∞—Å—Å—á–∏—Ç–∞—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å"),
                                      KeyboardButton(text="–û –∫–æ–º–ø–∞–Ω–∏–∏")], width=1)
    return kb.as_markup(resize_keyboard=True)

def keyboard_type():
    kb = ReplyKeyboardBuilder().add(*[KeyboardButton(text="–í—Ç–æ—Ä–∏—á–∫–∞"),
                                      KeyboardButton(text="–ù–æ–≤–æ—Å—Ç—Ä–æ–π–∫–∞"),
                                      KeyboardButton(text="–î–æ–º")
                                      ])
    return kb.as_markup(resize_keyboard=True)


contact_keyboard = ReplyKeyboardBuilder().add(*[KeyboardButton(text="–û—Ç–ø—Ä–∞–≤–∏—Ç—å –¢–µ–ª–µ—Ñ–æ–Ω", request_contact=True)])

# def keyboard_about():
#     kb = ReplyKeyboardBuilder().add(*[KeyboardButton(text="–û –∫–æ–º–ø–∞–Ω–∏–∏ üèó")
#                                                     ])
#     return kb.as_markup(resize_keyboard=True)


def keyboard_project():
    kb = ReplyKeyboardBuilder().add(*[KeyboardButton(text="–î–∞"),
                                      KeyboardButton(text="–ù–µ—Ç")
                                      ])
    return kb.as_markup(resize_keyboard=True)
